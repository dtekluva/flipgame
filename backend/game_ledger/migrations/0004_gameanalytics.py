# Generated by Django 4.2.3 on 2025-10-07 14:49

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("game_ledger", "0003_gamesession_final_wallet_balance_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="GameAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        help_text="Type/variant of the game (e.g., 'bomb_flip', 'classic', etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "player_name",
                    models.CharField(
                        blank=True,
                        help_text="Player's display name",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        help_text="Optional session identifier from external systems",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "stake_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount wagered for this game",
                        max_digits=12,
                    ),
                ),
                (
                    "winning_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Amount won (0 for losses, stake * multiplier for wins)",
                        max_digits=12,
                    ),
                ),
                (
                    "multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        help_text="Final multiplier achieved in the game",
                        max_digits=8,
                    ),
                ),
                (
                    "bomb_rate",
                    models.IntegerField(
                        help_text="Bomb rate percentage used (e.g., 15 for 15%)"
                    ),
                ),
                (
                    "cards_flipped",
                    models.IntegerField(
                        default=0,
                        help_text="Number of safe cards flipped before cashout/bomb",
                    ),
                ),
                (
                    "game_outcome",
                    models.CharField(
                        choices=[
                            ("WIN", "Win (Cashed Out)"),
                            ("LOSS", "Loss (Bomb Hit)"),
                            ("PERFECT", "Perfect Game"),
                        ],
                        help_text="Final outcome of the game",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Game Analytics Record",
                "verbose_name_plural": "Game Analytics Records",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["game_type", "bomb_rate"],
                        name="game_ledger_game_ty_78f75d_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="game_ledger_created_0a5131_idx"
                    ),
                    models.Index(
                        fields=["game_type", "created_at"],
                        name="game_ledger_game_ty_6c895b_idx",
                    ),
                ],
            },
        ),
    ]
